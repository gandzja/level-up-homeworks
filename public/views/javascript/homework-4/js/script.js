'use strict';

// Unit link - https://learn.javascript.ru/operators#tasks

// Task 1
// проверка while (i) закончится при i = 0, в цикле будет три итерации.
// В первой итерации вначале проверит i, выведет i = 3, затем уменьшит i на один
// Во второй итерации проверит i, выведет i = 2, затем уменьшит i на один
// В третьей итерации проверит i, выведет i = 1, затем уменьшит i на один, i становится 0 и цикл останавливается
//последним значением будет 1

// Task 2
//Префиксный вариант
//проверка while (i) закончится при i = 5, в цикле будет 4 итерации.
// 1) увеличит i,проверит i, затем выведет i = 1
// 2) увеличит i,проверит i, затем выведет i = 2
// 3) увеличит i,проверит i, затем выведет i = 3
// 4) увеличит i,проверит i, затем выведет i = 4
// 5) увеличит i,i становится 5 и цикл останавливается

//Постфиксный вариант
// проверка while (i) закончится при i = 5
// 1) проверит i, выведет i = 0, затем увеличет i на один
// 2) проверит i, выведет i = 1, затем увеличет i на один
// 3) проверит i, выведет i = 2, затем увеличет i на один
// 4) проверит i, выведет i = 3, затем увеличет i на один
// 5) проверит i, выведет i = 4, затем увеличет i на один, i становится 5 и цикл останавливается

// Task 3
//Префиксный вариант
//проверка for (i) закончится при i = 5
// 1) присваивает i = 0, проверяет условие i < 5, выводит i = 0, затем увеличивает i на один
// 2) проверяет условие i < 5, выводит i = 1, затем увеличивает i на один
// 3) проверяет условие i < 5, выводит i = 2, затем увеличивает i на один
// 4) проверяет условие i < 5, выводит i = 3, затем увеличивает i на один
// 5) проверяет условие i < 5, выводит i = 4, затем увеличивает i на один, i становится 5 и цикл останавливается

//Постфиксный вариант
// проверка for (i) закончится при i = 5
// 1) присваивает i = 0, проверяет условие i < 5, выводит i = 0, затем увеличивает i на один
// 2) проверяет условие i < 5, выводит i = 1, затем увеличивает i на один
// 3) проверяет условие i < 5, выводит i = 2, затем увеличивает i на один
// 4) проверяет условие i < 5, выводит i = 3, затем увеличивает i на один
// 5) проверяет условие i < 5, выводит i = 4, затем увеличивает i на один, i становится 5 и цикл останавливается

// Task 4
for (var i = 2; i <= 10; i++) {
  if (i % 2 !== 0) continue;
  console.log(i);
}

// Task 5
var i = 0;
while (i < 3){
  console.log('номер ' + i + '!');
  i++;
}

// Task 6
var number;
do {
  number = prompt('Введите число больше 100?', );
} while (number <= 100 && number != null);

// Task 7
Prime:
  for (var i = 2; i <= 10; i++) {
    for (var j = 2; j < i; j++) {
      if (i % j == 0) continue Prime;
    }
    console.log(i);
  }


// Unit link - https://learn.javascript.ru/switch#tasks
// Task 1
var browser;
if(browser === 'IE') {
  console.log ('О, да у вас IE!');
} else if (browser === 'Chrome' || browser === 'Firefox' || browser === 'Safari' || browser === 'Opera') {
  console.log ('Да, и эти браузеры мы поддерживаем');
} else {
  console.log ('Мы надеемся, что и в вашем браузере все ок!');
}

// Task 2
var a = +prompt('a?', '');
switch (a) {
  case 0:
    console.log(0);
    break;

  case 1:
    console.log(1);
    break;

  case 2:
  case 3:
    console.log('2,3');
    break;
}

// Unit link - https://learn.javascript.ru/function-basics#tasks
// Task 1
// различий в поведении функций нет, т.к для возврата значения используется директива return.
// Она может находиться в любом месте функции. Как только до неё доходит управление – функция завершается и значение передается обратно.

// Task 2 
// ||
function setkAge(age) {
  return (age > 18) || confirm('Родители разрешили?');
}
// ?
function setkAge(age) {
  return (age > 18) ? true : confirm('Родители разрешили?');
}
setkAge(25);
// Task 3
function min(a, b) {
  if (a < b) {
    return a;
  } else {
    return b;
  }
}

// Task 4 - не понимаю даже прочитав объяснение...
function pow(x, n) {
  var result = x;

  for (var i = 1; i < n; i++) {
    result *= x;
  }

  return result;
}

var x = prompt('x?', '');
var n = prompt('n?', '');

if (n <= 1) {
  console.log('Степень ' + n + 'не поддерживается, введите целую степень, большую 1');
} else {
  console.log( pow(x, n) );
}
